{
  "swagger": "2.0",
  "info": {
    "description": "Crowd-source questions for a meetup. Questioner helps the meetup organizer prioritize questions to be answered. Other users can vote on asked questions and they bubble to the top or bottom of the log",
    "version": "1.0.0",
    "title": "Questioner",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "sulaiman.sanusi@icloud.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "questioner-app-api.herokuapp.com",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Meetups",
      "description": "Post, Get and Delete Meetups"
    },
    {
      "name": "Questions",
      "description": "Post, Get and Patch Questions"
    },
    {
      "name": "Comments",
      "description": "Post, Get Comments"
    },
    {
      "name": "Users",
      "description": "Users SignUp and Authentication"
    },
    {
      "name": "Admin",
      "description": "Admin Signup and Authentication"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/meetups": {
      "post": {
        "tags": [
          "Meetups"
        ],
        "summary": "Add a new meetup",
        "description": "",
        "operationId": "addMeetups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tokens",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Meetup Details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Meetup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Meetup Created",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Authentication Errors"
          },
          "403": {
            "description": "Unauthorized User"
          },
          "422": {
            "description": "Input Validation Error"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "tokens": []
          }
        ]
      },
      "get": {
        "tags": [
          "Meetups"
        ],
        "summary": "Gets All Meetups",
        "description": "",
        "operationId": "getMeetups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation Or No Meetups Exist",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/meetups/upcoming": {
      "get": {
        "tags": [
          "Meetups"
        ],
        "summary": "Get upcoming meeetup",
        "description": "",
        "operationId": "getUpcomingMeetup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tokens",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Authentication Errors"
          },
          "403": {
            "description": "Token Forbidden"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "tokens": []
          }
        ]
      }
    },
    "/meetups/{meetupId}": {
      "get": {
        "tags": [
          "Meetups"
        ],
        "summary": "Gets Meetup by Id",
        "description": "",
        "operationId": "getMeetupById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "meetupId",
            "in": "path",
            "description": "Gets meetup by id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Authentication Errors"
          },
          "403": {
            "description": "Token Forbidden"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "tokens": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Meetups"
        ],
        "summary": "Deletes a Meetup",
        "description": "",
        "operationId": "deleteMeetup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "meetupId",
            "in": "path",
            "description": "meetup id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation Or Meetup-Id Doesnt Exit"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Authentication Errors"
          },
          "403": {
            "description": "Token Forbidden"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "tokens": []
          }
        ]
      }
    },
    "/meetups/{meetupId}/rsvps": {
      "post": {
        "tags": [
          "Meetups"
        ],
        "summary": "Add new Rsvp to Meetup",
        "description": "",
        "operationId": "rsvp",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tokens",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "meetupId",
            "in": "path",
            "description": "Gets meetup by id",
            "type": "integer",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Gets meetup by id",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RSVP"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation Or Meetup-Id Doesnt Exit"
          },
          "201": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Authentication Errors"
          },
          "403": {
            "description": "Token Forbidden"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "tokens": []
          }
        ]
      }
    },
    "/questions": {
      "post": {
        "tags": [
          "Questions"
        ],
        "summary": "Add new question",
        "description": "",
        "operationId": "addQuestions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tokens",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Question"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation Or Meetup-Id Doesnt Exit"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Authentication Errors"
          },
          "403": {
            "description": "Token Forbidden"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "tokens": []
          }
        ]
      },
      "get": {
        "tags": [
          "Questions"
        ],
        "summary": "Get all questions by MeetupId or userID",
        "description": "",
        "operationId": "getQuestions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "meetupId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation Or No Meetups Exist",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/questions/{questionId}/upvote": {
      "patch": {
        "tags": [
          "Questions"
        ],
        "summary": "Upvote a Question by ID",
        "description": "",
        "operationId": "upVote",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "questionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation Or Meetup-Id Doesnt Exit"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Authentication Errors"
          },
          "403": {
            "description": "Token Forbidden"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "tokens": []
          }
        ]
      }
    },
    "/questions/{questionId}/downvote": {
      "patch": {
        "tags": [
          "Questions"
        ],
        "summary": "Downvote a Question by ID",
        "description": "",
        "operationId": "downVote",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "questionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation Or Meetup-Id Doesnt Exit"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Authentication Errors"
          },
          "403": {
            "description": "Token Forbidden"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "tokens": []
          }
        ]
      }
    },
    "/comments": {
      "post": {
        "tags": [
          "Comments"
        ],
        "summary": "Posting of Comment on a Question",
        "description": "",
        "operationId": "addComments",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tokens",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Authentication Errors"
          },
          "403": {
            "description": "Token Forbidden"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "tokens": []
          }
        ]
      }
    },
    "/comments/{questionId}": {
      "get": {
        "tags": [
          "Comments"
        ],
        "summary": "Gets a Comments by Question Id",
        "description": "",
        "operationId": "getComments",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "questionId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a new user",
        "description": "",
        "operationId": "userSignUp",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Create user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Authentication Errors"
          },
          "403": {
            "description": "Token Forbidden"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "User Login",
        "description": "",
        "operationId": "userLogin",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "description": "User Name",
            "required": true,
            "type": "string",
            "format": "email"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "User Name",
            "required": true,
            "type": "string",
            "format": "password"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Invalid Password or Email"
          },
          "422": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/admin/auth/login": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin sign in",
        "description": "",
        "operationId": "AdminLogin",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "description": "User Name",
            "required": true,
            "type": "string",
            "format": "email"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "User Name",
            "required": true,
            "type": "string",
            "format": "password"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Invalid Password or Email"
          },
          "422": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/admin/auth/signup": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin sign signup",
        "description": "",
        "operationId": "AdminSignup",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "description": "User Name",
            "required": true,
            "type": "string",
            "format": "email"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "User Name",
            "required": true,
            "type": "string",
            "format": "password"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Invalid Password or Email"
          },
          "422": {
            "description": "Invalid input"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "tokens": {
      "type": "apiKey",
      "name": "token",
      "in": "header"
    }
  },
  "definitions": {
    "Meetup": {
      "type": "object",
      "required": [
        "topic",
        "location",
        "happeningOn"
      ],
      "properties": {
        "topic": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "happeningOn": {
          "type": "string",
          "format": "data-time"
        }
      },
      "xml": {
        "name": "Meetup"
      }
    },
    "Question": {
      "type": "object",
      "required": [
        "meetup",
        "title"
      ],
      "properties": {
        "meetup": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Question"
      }
    },
    "Comment": {
      "type": "object",
      "required": [
        "comment",
        "question"
      ],
      "properties": {
        "comment": {
          "type": "integer"
        },
        "question": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Comment"
      }
    },
    "RSVP": {
      "type": "object",
      "required": [
        "response"
      ],
      "properties": {
        "response": {
          "type": "string"
        }
      },
      "xml": {
        "name": "RSVP"
      }
    },
    "User": {
      "type": "object",
      "required": [
        "firstName",
        "lastName",
        "email",
        "phoneNumber",
        "userName",
        "password",
        "confirmPassword"
      ],
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "phoneNumber": {
          "type": "integer"
        },
        "userName": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "format": "password"
        },
        "confirmPassword": {
          "type": "string",
          "format": "password"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer"
        },
        "data": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}